"""add user and event tables

Revision ID: c1eff65b0b66
Revises: ef4cf56983e0
Create Date: 2025-09-11 00:30:42.399990

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'c1eff65b0b66'
down_revision: str | Sequence[str] | None = 'ef4cf56983e0'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('telegram_id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('telegram_id'),
    )
    op.create_table(
        'events',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'event_type', sa.Enum('BIRTHDAY', name='eventtype'), nullable=False
        ),
        sa.Column('event_date', sa.Date(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.drop_table('user_birthdays')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'user_birthdays',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            'telegram_id', sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            'username',
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            'name', sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column(
            'birthday_date', sa.DATE(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('user_birthdays_pkey')),
        sa.UniqueConstraint(
            'telegram_id',
            name=op.f('user_birthdays_telegram_id_key'),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.drop_table('events')
    op.drop_table('users')
    # ### end Alembic commands ###
